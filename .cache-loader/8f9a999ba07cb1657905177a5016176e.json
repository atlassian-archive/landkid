{"remainingRequest":"/Users/lbatchelor/src/landkid/node_modules/ts-loader/index.js??ref--4-1!/Users/lbatchelor/src/landkid/src/static/current-state/components/Lozenge.tsx","dependencies":[{"path":"/Users/lbatchelor/src/landkid/src/static/current-state/components/Lozenge.tsx","mtime":1542166175973},{"path":"/Users/lbatchelor/src/landkid/node_modules/cache-loader/dist/cjs.js","mtime":1542164158615},{"path":"/Users/lbatchelor/src/landkid/node_modules/ts-loader/index.js","mtime":1542164158621}],"contextDependencies":[],"result":["\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst React = require(\"react\");\nconst emotion_1 = require(\"emotion\");\nlet styles = emotion_1.css({\n    boxSizing: 'border-box',\n    display: 'inline-flex',\n    fontSize: '11px',\n    fontWeight: '700',\n    lineHeight: '1',\n    maxWidth: '200px',\n    textTransform: 'uppercase',\n    verticalAlign: 'baseline',\n    whiteSpace: 'nowrap',\n    borderRadius: '3px',\n    padding: '2px 4px 3px',\n});\nlet appearance = {\n    default: {\n        backgroundColor: 'var(--n20-color)',\n        color: 'var(--n500-color)',\n    },\n    success: {\n        backgroundColor: 'var(--g50-color)',\n        color: 'var(--g500-color)',\n    },\n    removed: {\n        backgroundColor: 'var(--r50-color)',\n        color: 'var(--r500-color)',\n    },\n    moved: {\n        backgroundColor: 'var(--y50-color)',\n        color: 'var(--n600-color)',\n    },\n    new: {\n        backgroundColor: 'var(--p50-color)',\n        color: 'var(--p500-color)',\n    },\n    inprogress: {\n        backgroundColor: 'var(--b50-color)',\n        color: 'var(--b500-color)',\n    },\n};\nexports.Lozenge = props => {\n    let selectedApperance = props.appearance\n        ? appearance[props.appearance]\n        : appearance.default;\n    return (React.createElement(\"span\", { className: styles, style: selectedApperance }, props.children));\n};\n",{"version":3,"file":"/Users/lbatchelor/src/landkid/src/static/current-state/components/Lozenge.tsx","sourceRoot":"","sources":["/Users/lbatchelor/src/landkid/src/static/current-state/components/Lozenge.tsx"],"names":[],"mappings":";;AAAA,+BAA+B;AAC/B,qCAA8B;AAI9B,IAAI,MAAM,GAAG,aAAG,CAAC;IACf,SAAS,EAAE,YAAY;IACvB,OAAO,EAAE,aAAa;IACtB,QAAQ,EAAE,MAAM;IAChB,UAAU,EAAE,KAAK;IACjB,UAAU,EAAE,GAAG;IACf,QAAQ,EAAE,OAAO;IACjB,aAAa,EAAE,WAAW;IAC1B,aAAa,EAAE,UAAU;IACzB,UAAU,EAAE,QAAQ;IACpB,YAAY,EAAE,KAAK;IACnB,OAAO,EAAE,aAAa;CACvB,CAAC,CAAC;AAEH,IAAI,UAAU,GAAG;IACf,OAAO,EAAE;QACP,eAAe,EAAE,kBAAkB;QACnC,KAAK,EAAE,mBAAmB;KAC3B;IACD,OAAO,EAAE;QACP,eAAe,EAAE,kBAAkB;QACnC,KAAK,EAAE,mBAAmB;KAC3B;IACD,OAAO,EAAE;QACP,eAAe,EAAE,kBAAkB;QACnC,KAAK,EAAE,mBAAmB;KAC3B;IACD,KAAK,EAAE;QACL,eAAe,EAAE,kBAAkB;QACnC,KAAK,EAAE,mBAAmB;KAC3B;IACD,GAAG,EAAE;QACH,eAAe,EAAE,kBAAkB;QACnC,KAAK,EAAE,mBAAmB;KAC3B;IACD,UAAU,EAAE;QACV,eAAe,EAAE,kBAAkB;QACnC,KAAK,EAAE,mBAAmB;KAC3B;CACF,CAAC;AAMW,QAAA,OAAO,GAAmC,KAAK,CAAC,EAAE;IAC7D,IAAI,iBAAiB,GAAG,KAAK,CAAC,UAAU;QACtC,CAAC,CAAC,UAAU,CAAC,KAAK,CAAC,UAAU,CAAC;QAC9B,CAAC,CAAC,UAAU,CAAC,OAAO,CAAC;IAEvB,OAAO,CACL,8BAAM,SAAS,EAAE,MAAM,EAAE,KAAK,EAAE,iBAAiB,IAC9C,KAAK,CAAC,QAAQ,CACV,CACR,CAAC;AACJ,CAAC,CAAC","sourcesContent":["import * as React from 'react';\nimport { css } from 'emotion';\n\nimport { LozengeAppearance } from './types';\n\nlet styles = css({\n  boxSizing: 'border-box',\n  display: 'inline-flex',\n  fontSize: '11px',\n  fontWeight: '700',\n  lineHeight: '1',\n  maxWidth: '200px',\n  textTransform: 'uppercase',\n  verticalAlign: 'baseline',\n  whiteSpace: 'nowrap',\n  borderRadius: '3px',\n  padding: '2px 4px 3px',\n});\n\nlet appearance = {\n  default: {\n    backgroundColor: 'var(--n20-color)',\n    color: 'var(--n500-color)',\n  },\n  success: {\n    backgroundColor: 'var(--g50-color)',\n    color: 'var(--g500-color)',\n  },\n  removed: {\n    backgroundColor: 'var(--r50-color)',\n    color: 'var(--r500-color)',\n  },\n  moved: {\n    backgroundColor: 'var(--y50-color)',\n    color: 'var(--n600-color)',\n  },\n  new: {\n    backgroundColor: 'var(--p50-color)',\n    color: 'var(--p500-color)',\n  },\n  inprogress: {\n    backgroundColor: 'var(--b50-color)',\n    color: 'var(--b500-color)',\n  },\n};\n\nexport type Props = {\n  appearance?: LozengeAppearance;\n};\n\nexport const Lozenge: React.FunctionComponent<Props> = props => {\n  let selectedApperance = props.appearance\n    ? appearance[props.appearance]\n    : appearance.default;\n\n  return (\n    <span className={styles} style={selectedApperance}>\n      {props.children}\n    </span>\n  );\n};\n"]}]}